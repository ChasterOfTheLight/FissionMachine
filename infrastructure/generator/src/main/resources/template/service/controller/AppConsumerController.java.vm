package ${package}.${moduleName}.service.controller;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package}.common.response.PageData;
import ${package}.common.response.Response;
import ${package}.common.util.CollectionUtils;
import ${package}.${moduleName}.service.param.${className}InfoQueryParam;
import ${package}.${moduleName}.service.param.${className}PageQueryParam;
import ${package}.${moduleName}.api.vo.${className}QueryVo;
import ${package}.${moduleName}.service.entity.${className}Entity;
import ${package}.${moduleName}.service.service.I${className}Service;
import ${mainPath}.service.common.param.CommonServiceRequestParam;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;
import java.util.stream.Collectors;

/**
 * ${comments}对外接口服务控制器.
 *
 * @author ${author}
 * @date ${datetime}
 */
@Api(value = "${comments}相关接口", tags = {"APP-${comments}相关接口"})
@Slf4j
@RestController
@RequestMapping("/${pathName}/app")
public class ${className}AppController {

    private final I${className}Service ${classname}Service;

    public ${className}AppController(I${className}Service ${classname}Service) {
        this.${classname}Service = ${classname}Service;
    }

    /**
     * 分页查询列表.
     *
     * @param param 分页查询参数
     * @return 数据分页集合
     */
    @ApiOperation(value = "分页查询${comments}列表", notes = "分页查询${comments}列表")
    @PostMapping(value = "/pageList", produces = {"application/json"})
    public Response<PageData<${className}QueryVo>> pageList(
            @Valid @RequestBody CommonServiceRequestParam<${className}PageQueryParam> param) {
        Page<${className}Entity> queryPage = ${classname}Service.queryPage(param.getRequestInfo().getPageSize(),
                param.getRequestInfo().getPageNum(), new ${className}Entity());
        if (CollectionUtils.isEmpty(queryPage.getRecords())) {
            return Response.success(PageData.empty(param.getRequestInfo().getPageSize(), param.getRequestInfo().getPageNum()));
        }

        return Response.success(new PageData<>(
                queryPage.getRecords().stream().map(${className}Entity::convert2Vo).collect(Collectors.toList()),
                queryPage.getTotal(), queryPage.getSize(), queryPage.getCurrent()));
    }

    /**
     * 详情查询.
     *
     * @param param 详情查询参数
     * @return 详情
     */
    @ApiOperation(value = "${comments}详情查询", notes = "${comments}详情查询")
    @PostMapping(value = "/info", produces = {"application/json"})
    public Response<${className}QueryVo> info(
            @Valid @RequestBody CommonServiceRequestParam<${className}InfoQueryParam> param) {
            ${className}Entity ${classname} = ${classname}Service.queryById(param.getRequestInfo().get${pk.attrName}());
            ${className}QueryVo vo = ${className}Entity.convert2Vo(${classname});
        return Response.success(vo);
    }

}
